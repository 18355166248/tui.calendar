name: 'Install root dependencies using cache'
description: 'Set Node.js and install node_modules'
outputs:
  root_cache_key:
    description: 'Key of root dependencies cache'
    value: ${{ steps.root_lockfile_hash.outputs.hash }}
runs:
  using: 'composite'
  steps:
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        registry-url: https://registry.npmjs.org/
    - name: Update npm to latest version
      run: npm install -g npm@latest
      shell: bash
    - name: Setup timezone
      uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: 'Asia/Seoul'
    - name: Compute root dependencies cache key
      id: root_lockfile_hash
      run: echo "::set-output name=hash::${{ hashFiles('package-lock.json') }}"
      shell: bash
    - name: Check root dependencies cache
      uses: actions/cache@v2
      id: root_cache_dependencies
      with:
        path: ./node_modules
        key: ${{ steps.root_lockfile_hash.outputs.hash }}
    - name: Install root dependencies
      run: |
        if echo ${{ steps.root_cache_dependencies.outputs.cache-hit }} | grep -c "true"
        then
          echo "Cache hit - skipping root dependency installation"
        else
          PLAYWRIGHT_BROWSERS_PATH=0 npm install
        fi
      shell: bash
    - name: Bootstrap repo
      # since we don't keep `package-lock.json` files in each projects
      # we should let lerna know to use `npm install` command otherwise it will fail.
      run: npx lerna bootstrap --no-ci
      shell: bash
